openapi: 3.0.0
info:
  title: Movie Service API
  description: API for managing movies (create, read, update, delete).
  version: 1.0.0
servers:
  - url: http://localhost:3002/api
    description: Local server for the movie-service
paths:
  /movies:
    post:
      summary: Create a new movie
      description: Create a new movie in the system.
      operationId: createMovie
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - director
                - year
                - genre
                - synopsis
              properties:
                title:
                  type: string
                  example: "Inception"
                director:
                  type: string
                  example: "Christopher Nolan"
                year:
                  type: integer
                  example: 2010
                genre:
                  type: string
                  example: "Sci-Fi"
                synopsis:
                  type: string
                  example: "A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a CEO."
      responses:
        '201':
          description: Successfully created movie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: "Inception"
                  director:
                    type: string
                    example: "Christopher Nolan"
                  year:
                    type: integer
                    example: 2010
                  genre:
                    type: string
                    example: "Sci-Fi"
                  synopsis:
                    type: string
                    example: "A thief who steals corporate secrets..."
        '400':
          description: Invalid data

  /movies:
    get:
      summary: Get all movies with filters and pagination
      description: Get a list of movies filtered by genre, director, year, etc.
      operationId: getMovies
      security:
        - BearerAuth: []
      parameters:
        - name: genre
          in: query
          schema:
            type: string
          description: Filter by gender
        - name: director
          in: query
          schema:
            type: string
          description: Filter by director
        - name: year
          in: query
          schema:
            type: integer
          description: Filter by year
        - name: page
          in: query
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            default: 5
          description: Number of results per page
      responses:
        '200':
          description: Movie list with filters and pagination
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalMovies:
                    type: integer
                    example: 100
                  totalPages:
                    type: integer
                    example: 20
                  currentPage:
                    type: integer
                    example: 1
                  movies:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: "Inception"
                        director:
                          type: string
                          example: "Christopher Nolan"
                        year:
                          type: integer
                          example: 2010
                        genre:
                          type: string
                          example: "Sci-Fi"
                        synopsis:
                          type: string
                          example: "A thief who steals corporate secrets..."
        '400':
          description: Request error

  /movies/{id}:
    get:
      summary: Get a movie by ID
      description: Gets the details of a movie by its ID.
      operationId: getMovieById
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: movie ID
      responses:
        '200':
          description: Successfully obtained film
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: "Inception"
                  director:
                    type: string
                    example: "Christopher Nolan"
                  year:
                    type: integer
                    example: 2010
                  genre:
                    type: string
                    example: "Sci-Fi"
                  synopsis:
                    type: string
                    example: "A thief who steals corporate secrets..."
        '404':
          description: Movie not found

  /movies/{id}:
    put:
      summary: Update a movie
      description: Updates the information of an existing movie.
      operationId: updateMovie
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: movie ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - director
                - year
                - genre
                - synopsis
              properties:
                title:
                  type: string
                  example: "Inception"
                director:
                  type: string
                  example: "Christopher Nolan"
                year:
                  type: integer
                  example: 2010
                genre:
                  type: string
                  example: "Sci-Fi"
                synopsis:
                  type: string
                  example: "A thief who steals corporate secrets..."
      responses:
        '200':
          description: Successfully updated movie
        '404':
          description: Movie not found
        '400':
          description: Invalid data

  /movies/{id}:
    delete:
      summary: Delete a movie
      description: Delete a movie by its ID.
      operationId: deleteMovie
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: movie ID
      responses:
        '200':
          description: Movie successfully deleted
        '404':
          description: Movie not found
        '500':
          description: Error deleting movie

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
