openapi: 3.0.0
info:
  title: Movie Match API
  description: API para gestionar usuarios, películas y recomendaciones.
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Servidor local
paths:
  /auth/register:
    post:
      summary: Registro de usuario
      tags: [Autenticación]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: Usuario registrado con éxito
        400:
          description: Datos inválidos
  /auth/login:
    post:
      summary: Inicio de sesión
      tags: [Autenticación]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Inicio de sesión exitoso
        401:
          description: Credenciales incorrectas
  /movies:
    post:
      summary: Crear una nueva película
      tags: [Películas]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                director:
                  type: string
                year:
                  type: integer
                genre:
                  type: string
                synopsis:
                  type: string
      responses:
        201:
          description: Película creada con éxito
        400:
          description: Datos inválidos
    get:
      summary: Obtener todas las películas con filtros y paginación
      tags: [Películas]
      security:
        - BearerAuth: []
      parameters:
        - name: genre
          in: query
          schema:
            type: string
        - name: director
          in: query
          schema:
            type: string
        - name: year
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 5
      responses:
        200:
          description: Lista de películas
        400:
          description: Error en la solicitud
  /movies/{id}:
    get:
      summary: Obtener película por ID
      tags: [Películas]
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Película obtenida
        404:
          description: Película no encontrada
  /rate:
    post:
      summary: Calificar una película
      tags: [Ratings]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                movieId:
                  type: integer
                score:
                  type: integer
      responses:
        200:
          description: Película calificada con éxito
        400:
          description: Datos inválidos
  /recommendations:
    get:
      summary: Obtener recomendaciones de películas
      tags: [Recomendaciones]
      security:
        - BearerAuth: []
      responses:
        200:
          description: Lista de películas recomendadas
        400:
          description: Usuario no autenticado
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
